{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to DevSolutions Hub","text":""},{"location":"#about-me","title":"About Me","text":"<p>Hello! I'm Yan Naing Htwe, a passionate Software Engineer with over 4 years of experience building user-friendly and scalable web and mobile applications. Based in Tokyo, I specialize in creating complete end-to-end solutions that solve real-world problems.</p>"},{"location":"#my-expertise","title":"My Expertise","text":"<ul> <li>Frontend Development: React, Next.js, React Native, Vue.js</li> <li>Backend Technologies: Node.js, Laravel, Spring Boot</li> <li>Mobile Development: React Native, cross-platform solutions</li> <li>Full-Stack Development: API design, database management, system integration</li> </ul>"},{"location":"#why-i-created-this-resource-hub","title":"Why I Created This Resource Hub","text":"<p>Throughout my journey as a software engineer, I've encountered countless challenges - from complex Docker configurations to intricate Git workflows, from debugging production issues to managing enterprise-level projects. Each obstacle taught me valuable lessons that I wish I had documented from the beginning.</p>"},{"location":"#the-problem-i-noticed","title":"The Problem I Noticed","text":"<p>In the fast-paced world of software development, developers often: - Reinvent the wheel by searching for the same solutions repeatedly - Lose time looking through scattered documentation and Stack Overflow posts - Struggle with consistency across different projects and teams - Face challenges when transitioning between different tools and workflows</p>"},{"location":"#my-solution","title":"My Solution","text":"<p>This documentation hub serves as a centralized knowledge base containing:</p> <p>\u2728 Practical guides that I've tested in real production environments \u2728 Step-by-step tutorials with clear explanations and context \u2728 Industry best practices learned from working in enterprise settings \u2728 Quick reference materials for daily development tasks \u2728 Troubleshooting guides for common issues developers face  </p>"},{"location":"#what-youll-find-here","title":"What You'll Find Here","text":""},{"location":"#docker-containerization","title":"\ud83d\udc33 Docker &amp; Containerization","text":"<p>Comprehensive guides covering everything from basic Docker commands to complex multi-container applications, including database setup and networking configurations.</p>"},{"location":"#git-version-control","title":"\ud83d\udd27 Git &amp; Version Control","text":"<p>Industry-standard Git workflows, branching strategies, collaborative development practices, and emergency procedures for production environments.</p>"},{"location":"#development-workflows","title":"\ud83d\ude80 Development Workflows","text":"<p>Best practices for project setup, deployment strategies, CI/CD pipelines, and maintaining code quality in team environments.</p>"},{"location":"#tools-technologies","title":"\ud83d\udee0\ufe0f Tools &amp; Technologies","text":"<p>Detailed documentation for various development tools, frameworks, and technologies commonly used in modern software development.</p>"},{"location":"#my-philosophy","title":"My Philosophy","text":"<p>\"Documentation is not just about recording what you did - it's about enabling others to build upon your work and avoid the same pitfalls.\"</p> <p>I believe in: - Learning by doing - Every guide here comes from hands-on experience - Sharing knowledge - The developer community thrives when we help each other - Continuous improvement - Documentation should evolve with our understanding - Practical solutions - Focus on real-world scenarios over theoretical concepts</p>"},{"location":"#how-this-site-helps-you","title":"How This Site Helps You","text":""},{"location":"#save-time","title":"\ud83c\udfaf Save Time","text":"<p>Instead of searching through multiple resources, find consolidated, tested solutions in one place.</p>"},{"location":"#improve-skills","title":"\ud83d\udcc8 Improve Skills","text":"<p>Learn not just the \"how\" but also the \"why\" behind different approaches and best practices.</p>"},{"location":"#work-better-in-teams","title":"\ud83e\udd1d Work Better in Teams","text":"<p>Understand industry-standard workflows and practices that make collaboration smoother.</p>"},{"location":"#handle-emergencies","title":"\ud83d\udea8 Handle Emergencies","text":"<p>Quick reference guides for when production issues need immediate attention.</p>"},{"location":"#my-background","title":"My Background","text":"<p>As a software engineer who has worked on diverse projects - from mobile applications to full-stack web solutions - I've experienced the challenges of:</p> <ul> <li>Leading frontend and mobile projects while ensuring pixel-perfect UIs</li> <li>Collaborating with cross-functional teams including designers and backend developers  </li> <li>Managing complex deployments and maintaining system reliability</li> <li>Working in enterprise environments with strict quality and security requirements</li> </ul> <p>This experience has given me insights into what developers really need in their daily work, which I'm excited to share through this platform.</p>"},{"location":"#connect-with-me","title":"Connect With Me","text":"<p>Want to learn more about my work or discuss these topics further?</p> <ul> <li>Portfolio: yannainghtwe.vercel.app</li> <li>Location: Tokyo, Japan</li> <li>Expertise: Full-Stack Development, Mobile Applications, System Architecture</li> </ul>"},{"location":"#how-to-use-this-documentation","title":"How to Use This Documentation","text":"<p>Each section in this hub is designed to be: - Self-contained - You can jump to any topic without reading others - Practical - Real commands and examples you can use immediately - Contextual - Explanations of when and why to use different approaches - Progressive - From basic concepts to advanced techniques</p> <p>Whether you're a junior developer looking to learn industry practices or a senior engineer seeking quick references, this documentation hub is built to support your daily development needs.</p> <p>Happy coding! \ud83d\ude80</p> <p>Last updated: January 2025</p>"},{"location":"caddy/ssl-renewal/","title":"Troubleshooting Caddy: A Guide to Running and Renewing SSL","text":"<p>This guide outlines a methodical approach to diagnosing and resolving common issues with Caddy, including startup failures and problems with SSL certificate renewal. The process involves systematically checking Caddy's status, configuration, and permissions.</p>"},{"location":"caddy/ssl-renewal/#1-initial-caddy-status-check","title":"1. Initial Caddy Status Check","text":"<p>Start by verifying Caddy's operational status and location.</p> <ul> <li>Check the Caddy process: <code>bash     which caddy</code>     This command shows the path to the Caddy executable.</li> <li>Get Caddy's version: <code>bash     caddy version</code>     This helps in identifying potential version-specific issues.</li> <li>Find Caddy-related files: <code>bash     sudo find /etc -name \u201c*caddy*\u201d -o -name \u201cCaddyfile\u201d 2&gt;/dev/null</code>     This command helps locate Caddy's configuration and related files.</li> <li>View the Caddyfile: <code>bash     sudo cat /etc/caddy/Caddyfile</code>     Review the Caddyfile for any syntax errors or misconfigurations.</li> </ul>"},{"location":"caddy/ssl-renewal/#2-diagnosing-ssl-and-directory-issues","title":"2. Diagnosing SSL and Directory Issues","text":"<p>SSL certificate renewal and Caddy's ability to write to its data directory are frequent points of failure.</p> <ul> <li>List certificate files: <code>bash     sudo ls -la /var/lib/caddy/.local/share/caddy/certificates/</code>     Check if certificates exist and if their permissions are correct.</li> <li>Find certificate and ACME files: <code>bash     sudo find /var/lib/caddy -name \u201c*certificate*\u201d -o -name \u201c*acme*\u201d 2&gt;/dev/null</code>     This helps locate all related SSL and ACME challenge files.</li> <li>List Caddy's data directory contents: <code>bash     sudo ls -la /var/lib/caddy</code>     Verify the permissions and ownership of the Caddy data directory.</li> </ul>"},{"location":"caddy/ssl-renewal/#3-reviewing-logs-and-validation","title":"3. Reviewing Logs and Validation","text":"<p>Logs are crucial for understanding why Caddy might be failing.</p> <ul> <li>Check Caddy service logs: <code>bash     sudo journalctl -u caddy -no-page -n 50</code>     Examine the last 50 lines of the Caddy service journal for error messages.</li> <li>Validate the Caddyfile: <code>bash     sudo caddy validate --config /etc/caddy/Caddyfile</code>     A successful validation confirms that the Caddyfile syntax is correct.</li> </ul>"},{"location":"caddy/ssl-renewal/#4-remediation-steps","title":"4. Remediation Steps","text":"<p>If errors were found, follow these steps to fix common issues.</p> <ul> <li>Restart the Caddy service: <code>bash     sudo systemctl restart caddy</code>     A simple restart can resolve temporary glitches.</li> <li>View the Caddy service unit file: <code>bash     sudo cat /etc/systemd/system/caddy.service</code>     This file defines how Caddy runs and under which user.</li> <li>Test Caddy with its configuration: <code>bash     sudo /usr/local/bin/caddy run --environ --config /etc/caddy/Caddyfile</code>     This command runs Caddy in the foreground, providing real-time output that can reveal subtle errors.</li> <li>Clear old certificate data: <code>bash     sudo rm -rf /root/.local/share/caddy/certificates/     sudo rm -rf /root/.local/share/caddy/locks/</code>     Sometimes, corrupted or outdated certificates can prevent renewal. Deleting them forces Caddy to request new ones.</li> <li>Format the Caddyfile: <code>bash     sudo caddy fmt --overwrite /etc/caddy/Caddyfile</code>     This command standardizes the formatting of the Caddyfile, which can help in spotting syntax issues.</li> </ul>"},{"location":"caddy/ssl-renewal/#5-ensuring-proper-user-and-permissions","title":"5. Ensuring Proper User and Permissions","text":"<p>Incorrect user permissions are a very common cause of Caddy failures. The best practice is to run Caddy as a dedicated, unprivileged system user.</p> <ul> <li>Add a dedicated system user for Caddy: <code>bash     sudo user add --system --home /var/lib/caddy --create-home --shell /usr/sbin/nologin caddy</code></li> <li>Set proper ownership: <code>bash     sudo chown -R caddy:caddy /var/lib/caddy</code>     This ensures Caddy can read and write to its data directory.</li> </ul>"},{"location":"caddy/ssl-renewal/#6-fixing-the-systemd-service-file","title":"6. Fixing the Systemd Service File","text":"<p>The systemd service file dictates Caddy's behavior. An incorrect configuration can cause it to fail silently.</p> <ul> <li> <p>Create or correct the systemd service file:     ```bash     sudo tee /etc/systemd/system/caddy.service &gt; /dev/null &lt;&lt; 'EOF'     [Unit]     Description=Caddy Web Server     Documentation=https://caddyserver.com/docs/     After=network.target network-online.target     Requires=network-online.target</p> <p>[Service] Type=notify User=caddy Group=caddy ExecStart=/usr/local/bin/caddy run --environ --config /etc/caddy/Caddyfile ExecReload=/usr/local/bin/caddy reload --config /etc/caddy/Caddyfile --force TimeoutStopSec=5s LimitNOFILE=1048576 LimitNPROC=1048576 PrivateTmp=true ProtectSystem=full AmbientCapabilities=CAP_NET_BIND_SERVICE NoNewPrivileges=true</p> <p>[Install] WantedBy=multi-user.target EOF <code>* **Reload systemd:**</code>bash sudo systemctl daemon-reload ``` This command makes systemd aware of the new or changed service file.</p> </li> </ul>"},{"location":"caddy/ssl-renewal/#7-final-verification-and-cleanup","title":"7. Final Verification and Cleanup","text":"<ul> <li>Check logs for final errors: <code>bash     sudo journalctl -xeu caddy.service --no-pager -n 20</code>     Review the most recent logs to confirm the service is starting without issues.</li> <li>Check listening ports: <code>bash     sudo lsof -i :2019</code>     This command verifies that Caddy is listening on its default management port.</li> <li>Kill any old Caddy processes: <code>bash     sudo pkill -f caddy</code>     This ensures that no conflicting processes are running.</li> <li>Start the Caddy service: <code>bash     sudo systemctl start caddy</code></li> <li>Test connectivity and SSL: <code>bash     sleep 5 &amp;&amp; curl -I [https://api.nexplace.jp](https://api.nexplace.jp)     echo | openssl s_client -servername api.nexplace.jp -connect api.nexplace.jp:443 2&gt;/dev/null | openssl x509 -noout -dates</code>     These commands confirm that the site is accessible and that the SSL certificate is valid and has been renewed.</li> <li>Enable Caddy to start on boot: <code>bash     sudo systemctl enable caddy</code>     This final step ensures that Caddy will automatically start whenever the system reboots.</li> </ul>"},{"location":"docker/docker_process_guide/","title":"Docker Process Guide","text":"<p>This guide covers the complete Docker workflow from building Spring Boot applications to managing PostgreSQL databases with Docker.</p>"},{"location":"docker/docker_process_guide/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Spring Boot Docker Image Creation</li> <li>Essential Docker Commands</li> <li>PostgreSQL Database Setup</li> <li>Docker Network Configuration</li> <li>PostgreSQL Service Management</li> </ol>"},{"location":"docker/docker_process_guide/#spring-boot-docker-image-creation","title":"Spring Boot Docker Image Creation","text":""},{"location":"docker/docker_process_guide/#building-the-docker-image","title":"Building the Docker Image","text":"<pre><code>./mvnw spring-boot:build-image \"-Dspring-boot.build-image.imageName=orandian2511/jobappimage\"\n</code></pre> <p>Explanation: This command uses Maven Wrapper to build a Docker image for your Spring Boot application. The <code>-Dspring-boot.build-image.imageName</code> parameter specifies the image name and tag. Spring Boot's build-image goal uses Cloud Native Buildpacks to create an optimized Docker image.</p>"},{"location":"docker/docker_process_guide/#pushing-to-docker-hub","title":"Pushing to Docker Hub","text":"<pre><code>docker push orandian2511/jobappimage\n</code></pre> <p>Explanation: Uploads your locally built Docker image to Docker Hub registry under the username <code>orandian2511</code>. This makes the image available for deployment on any system with Docker.</p>"},{"location":"docker/docker_process_guide/#running-the-application","title":"Running the Application","text":"<pre><code># Run in foreground (interactive mode)\ndocker run -p 8080:8080 orandian2511/jobappimage\n\n# Run in background (detached mode)\ndocker run -d -p 8080:8080 orandian2511/jobappimage\n</code></pre> <p>Explanation:  - <code>-p 8080:8080</code>: Maps port 8080 on your host machine to port 8080 inside the container - <code>-d</code>: Runs the container in detached mode (background)</p>"},{"location":"docker/docker_process_guide/#monitoring-the-application","title":"Monitoring the Application","text":"<pre><code># List running containers\ndocker ps\n\n# View container logs\ndocker logs a6c0aa9393dc\n</code></pre> <p>Explanation: <code>docker ps</code> shows active containers, while <code>docker logs</code> displays the output from a specific container using its ID.</p>"},{"location":"docker/docker_process_guide/#essential-docker-commands","title":"Essential Docker Commands","text":""},{"location":"docker/docker_process_guide/#image-management","title":"Image Management","text":"<pre><code># Pull an image from registry\ndocker pull &lt;image&gt;\n\n# Push an image to registry\ndocker push &lt;username/image&gt;\n\n# Build an image from Dockerfile\ndocker build -t &lt;username/image&gt; .\n\n# List all images\ndocker images\n\n# Remove an image\ndocker rmi &lt;image-id/image-name&gt;\n</code></pre>"},{"location":"docker/docker_process_guide/#container-management","title":"Container Management","text":"<pre><code># Run a container\ndocker run -it -d -p &lt;host-port&gt;:&lt;container-port&gt; --name &lt;name&gt; &lt;image&gt;\n\n# Stop a running container\ndocker stop &lt;container-id/container-name&gt;\n\n# Start a stopped container\ndocker start &lt;container-id/container-name&gt;\n\n# Remove a container\ndocker rm &lt;container-id/container-name&gt;\n\n# List running containers\ndocker ps\n\n# List all containers (including stopped)\ndocker ps -a\n</code></pre>"},{"location":"docker/docker_process_guide/#container-interaction","title":"Container Interaction","text":"<pre><code># Execute commands inside a running container\ndocker exec -it &lt;container-name/container-id&gt; bash\n\n# View container logs\ndocker logs &lt;container-name/container-id&gt;\n\n# Inspect container configuration\ndocker inspect &lt;container-name/container-id&gt;\n</code></pre> <p>Key Flags Explained: - <code>-it</code>: Interactive terminal mode - <code>-d</code>: Detached mode (runs in background) - <code>-p</code>: Port mapping - <code>--name</code>: Assigns a custom name to the container</p>"},{"location":"docker/docker_process_guide/#postgresql-database-setup","title":"PostgreSQL Database Setup","text":""},{"location":"docker/docker_process_guide/#basic-postgresql-container","title":"Basic PostgreSQL Container","text":"<pre><code># Run PostgreSQL database\ndocker run -d --name db -e POSTGRES_PASSWORD=postgres postgres\n</code></pre> <p>Explanation: Creates a PostgreSQL container named <code>db</code> with the default password set to <code>postgres</code>. The <code>-e</code> flag sets environment variables.</p>"},{"location":"docker/docker_process_guide/#pgadmin-web-interface","title":"PgAdmin Web Interface","text":"<pre><code># Run PgAdmin for database management\ndocker run -d --name pgadmin \\\n  -e PGADMIN_DEFAULT_EMAIL=admin@gmail.com \\\n  -e PGADMIN_DEFAULT_PASSWORD=admin \\\n  dpage/pgadmin4\n</code></pre> <p>Explanation: Starts PgAdmin4 web interface for PostgreSQL management. You can access it via a web browser once the container is running.</p>"},{"location":"docker/docker_process_guide/#testing-container-communication","title":"Testing Container Communication","text":"<pre><code># Test network connectivity between containers\ndocker exec -it pgadmin ping db\n</code></pre> <p>Explanation: This command attempts to ping the <code>db</code> container from inside the <code>pgadmin</code> container. Initially, this may fail because containers aren't on the same network.</p>"},{"location":"docker/docker_process_guide/#cleanup","title":"Cleanup","text":"<pre><code># Force remove both containers\ndocker rm -f db pgadmin\n</code></pre> <p>Explanation: The <code>-f</code> flag forcefully stops and removes running containers.</p>"},{"location":"docker/docker_process_guide/#docker-network-configuration","title":"Docker Network Configuration","text":""},{"location":"docker/docker_process_guide/#creating-a-custom-network","title":"Creating a Custom Network","text":"<pre><code># Create a user-defined bridge network\ndocker network create my-network\n</code></pre> <p>Explanation: Creates a custom network that allows containers to communicate using container names as hostnames.</p>"},{"location":"docker/docker_process_guide/#running-containers-on-custom-network","title":"Running Containers on Custom Network","text":"<pre><code># Run PostgreSQL on custom network\ndocker run -d --name db --network my-network \\\n  -e POSTGRES_PASSWORD=postgres postgres\n\n# Run PgAdmin on the same network\ndocker run -d --name pgadmin --network my-network \\\n  -e PGADMIN_DEFAULT_EMAIL=user@domain.com \\\n  -e PGADMIN_DEFAULT_PASSWORD=SuperSecret \\\n  dpage/pgadmin4\n</code></pre> <p>Explanation: Both containers are now on the same custom network, enabling them to communicate using container names (<code>db</code>, <code>pgadmin</code>) as hostnames.</p>"},{"location":"docker/docker_process_guide/#verify-network-connectivity","title":"Verify Network Connectivity","text":"<pre><code># Test connectivity between networked containers\ndocker exec -it pgadmin ping db\n</code></pre> <p>Explanation: This should now work successfully since both containers are on the same network.</p>"},{"location":"docker/docker_process_guide/#postgresql-service-management","title":"PostgreSQL Service Management","text":""},{"location":"docker/docker_process_guide/#stopping-local-postgresql-services","title":"Stopping Local PostgreSQL Services","text":"<pre><code># Stop PostgreSQL service (macOS with Homebrew)\nsudo brew services stop postgresql\n\n# Kill any running PostgreSQL processes\nsudo pkill -f postgres\n</code></pre> <p>Explanation: These commands stop local PostgreSQL installations that might conflict with Docker containers. This is useful when you want to use PostgreSQL in Docker instead of a local installation.</p>"},{"location":"docker/docker_process_guide/#best-practices","title":"Best Practices","text":"<ol> <li>Use specific tags: Instead of <code>latest</code>, use version tags for production</li> <li>Environment variables: Store sensitive data in environment variables, not in the image</li> <li>Volume mapping: Use volumes for persistent data storage</li> <li>Resource limits: Set memory and CPU limits for containers</li> <li>Health checks: Implement health checks for better monitoring</li> <li>Multi-stage builds: Use multi-stage Dockerfiles for smaller production images</li> </ol>"},{"location":"docker/docker_process_guide/#troubleshooting-tips","title":"Troubleshooting Tips","text":"<ul> <li>Use <code>docker logs &lt;container-name&gt;</code> to debug container issues</li> <li>Check port conflicts with <code>netstat -tlnp | grep :8080</code></li> <li>Verify network connectivity with <code>docker network ls</code> and <code>docker network inspect</code></li> <li>Clean up unused resources with <code>docker system prune</code></li> </ul>"},{"location":"docker/essential_docker_commands/","title":"Essential Docker Commands Reference","text":"<p>A comprehensive guide to the most important Docker commands every developer should know.</p>"},{"location":"docker/essential_docker_commands/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Docker Image Commands</li> <li>Docker Container Commands</li> <li>Docker Network Commands</li> <li>Docker Volume Commands</li> <li>Docker System Commands</li> <li>Docker Compose Commands</li> <li>Common Flags and Options</li> <li>Practical Examples</li> </ol>"},{"location":"docker/essential_docker_commands/#docker-image-commands","title":"Docker Image Commands","text":""},{"location":"docker/essential_docker_commands/#building-images","title":"Building Images","text":"<pre><code># Build image from Dockerfile in current directory\ndocker build -t myapp:latest .\n\n# Build with custom Dockerfile name\ndocker build -f Dockerfile.prod -t myapp:prod .\n\n# Build with build arguments\ndocker build --build-arg ENV=production -t myapp:prod .\n</code></pre>"},{"location":"docker/essential_docker_commands/#managing-images","title":"Managing Images","text":"<pre><code># List all images\ndocker images\ndocker image ls\n\n# Pull image from registry\ndocker pull nginx:latest\ndocker pull mysql:8.0\n\n# Push image to registry\ndocker push username/myapp:latest\n\n# Remove image\ndocker rmi image_id\ndocker rmi nginx:latest\n\n# Remove unused images\ndocker image prune\n\n# Remove all images\ndocker rmi $(docker images -q)\n</code></pre>"},{"location":"docker/essential_docker_commands/#image-information","title":"Image Information","text":"<pre><code># Show image details\ndocker inspect nginx:latest\n\n# Show image history/layers\ndocker history nginx:latest\n\n# Search images on Docker Hub\ndocker search mysql\n</code></pre>"},{"location":"docker/essential_docker_commands/#docker-container-commands","title":"Docker Container Commands","text":""},{"location":"docker/essential_docker_commands/#running-containers","title":"Running Containers","text":"<pre><code># Basic container run\ndocker run nginx\n\n# Run in detached mode (background)\ndocker run -d nginx\n\n# Run with custom name\ndocker run --name webserver nginx\n\n# Run with port mapping\ndocker run -p 8080:80 nginx\n\n# Run with environment variables\ndocker run -e MYSQL_ROOT_PASSWORD=secret mysql\n\n# Run with volume mount\ndocker run -v /host/path:/container/path nginx\n\n# Interactive container with terminal\ndocker run -it ubuntu bash\n\n# Run and remove container when it stops\ndocker run --rm nginx\n</code></pre>"},{"location":"docker/essential_docker_commands/#container-lifecycle","title":"Container Lifecycle","text":"<pre><code># List running containers\ndocker ps\n\n# List all containers (including stopped)\ndocker ps -a\n\n# Start stopped container\ndocker start container_name\n\n# Stop running container\ndocker stop container_name\n\n# Restart container\ndocker restart container_name\n\n# Pause container\ndocker pause container_name\n\n# Unpause container\ndocker unpause container_name\n\n# Kill container (force stop)\ndocker kill container_name\n</code></pre>"},{"location":"docker/essential_docker_commands/#container-interaction","title":"Container Interaction","text":"<pre><code># Execute command in running container\ndocker exec -it container_name bash\ndocker exec container_name ls /app\n\n# View container logs\ndocker logs container_name\ndocker logs -f container_name  # Follow logs\ndocker logs --tail 100 container_name  # Last 100 lines\n\n# Copy files to/from container\ndocker cp file.txt container_name:/path/\ndocker cp container_name:/path/file.txt ./\n\n# Show container resource usage\ndocker stats container_name\n\n# Show running processes in container\ndocker top container_name\n</code></pre>"},{"location":"docker/essential_docker_commands/#container-management","title":"Container Management","text":"<pre><code># Remove stopped container\ndocker rm container_name\n\n# Remove running container (force)\ndocker rm -f container_name\n\n# Remove all stopped containers\ndocker container prune\n\n# Remove all containers\ndocker rm $(docker ps -aq)\n\n# Inspect container details\ndocker inspect container_name\n</code></pre>"},{"location":"docker/essential_docker_commands/#docker-network-commands","title":"Docker Network Commands","text":""},{"location":"docker/essential_docker_commands/#network-management","title":"Network Management","text":"<pre><code># List networks\ndocker network ls\n\n# Create custom network\ndocker network create mynetwork\ndocker network create --driver bridge mynetwork\n\n# Remove network\ndocker network rm mynetwork\n\n# Connect container to network\ndocker network connect mynetwork container_name\n\n# Disconnect container from network\ndocker network disconnect mynetwork container_name\n\n# Inspect network details\ndocker network inspect mynetwork\n\n# Remove unused networks\ndocker network prune\n</code></pre>"},{"location":"docker/essential_docker_commands/#running-containers-with-networks","title":"Running Containers with Networks","text":"<pre><code># Run container on specific network\ndocker run --network mynetwork nginx\n\n# Run with network alias\ndocker run --network mynetwork --network-alias web nginx\n</code></pre>"},{"location":"docker/essential_docker_commands/#docker-volume-commands","title":"Docker Volume Commands","text":""},{"location":"docker/essential_docker_commands/#volume-management","title":"Volume Management","text":"<pre><code># List volumes\ndocker volume ls\n\n# Create volume\ndocker volume create myvolume\n\n# Remove volume\ndocker volume rm myvolume\n\n# Remove unused volumes\ndocker volume prune\n\n# Inspect volume details\ndocker volume inspect myvolume\n</code></pre>"},{"location":"docker/essential_docker_commands/#using-volumes","title":"Using Volumes","text":"<pre><code># Mount named volume\ndocker run -v myvolume:/data nginx\n\n# Mount host directory (bind mount)\ndocker run -v /host/path:/container/path nginx\n\n# Read-only mount\ndocker run -v /host/path:/container/path:ro nginx\n\n# Create and mount volume in one command\ndocker run -v mydata:/app/data nginx\n</code></pre>"},{"location":"docker/essential_docker_commands/#docker-system-commands","title":"Docker System Commands","text":""},{"location":"docker/essential_docker_commands/#system-information","title":"System Information","text":"<pre><code># Show Docker system info\ndocker info\n\n# Show Docker version\ndocker version\n\n# Show disk usage\ndocker system df\n\n# Show real-time events\ndocker events\n</code></pre>"},{"location":"docker/essential_docker_commands/#system-cleanup","title":"System Cleanup","text":"<pre><code># Remove unused data (containers, networks, images, build cache)\ndocker system prune\n\n# Remove everything including volumes\ndocker system prune -a --volumes\n\n# Remove unused containers\ndocker container prune\n\n# Remove unused images\ndocker image prune\n\n# Remove unused networks\ndocker network prune\n\n# Remove unused volumes\ndocker volume prune\n</code></pre>"},{"location":"docker/essential_docker_commands/#docker-compose-commands","title":"Docker Compose Commands","text":""},{"location":"docker/essential_docker_commands/#basic-operations","title":"Basic Operations","text":"<pre><code># Start services defined in docker-compose.yml\ndocker-compose up\n\n# Start in detached mode\ndocker-compose up -d\n\n# Stop services\ndocker-compose down\n\n# Stop and remove volumes\ndocker-compose down -v\n\n# Build services\ndocker-compose build\n\n# Pull service images\ndocker-compose pull\n</code></pre>"},{"location":"docker/essential_docker_commands/#service-management","title":"Service Management","text":"<pre><code># Scale services\ndocker-compose up -d --scale web=3\n\n# View running services\ndocker-compose ps\n\n# View logs\ndocker-compose logs\ndocker-compose logs web\n\n# Execute command in service\ndocker-compose exec web bash\n\n# Restart services\ndocker-compose restart\n</code></pre>"},{"location":"docker/essential_docker_commands/#common-flags-and-options","title":"Common Flags and Options","text":""},{"location":"docker/essential_docker_commands/#universal-flags","title":"Universal Flags","text":"<ul> <li><code>-d, --detach</code>: Run container in background</li> <li><code>-it</code>: Interactive terminal (combine -i and -t)</li> <li><code>-p, --publish</code>: Publish container port to host</li> <li><code>-v, --volume</code>: Mount volume</li> <li><code>-e, --env</code>: Set environment variables</li> <li><code>--name</code>: Assign name to container</li> <li><code>--rm</code>: Remove container when it exits</li> <li><code>-f, --force</code>: Force operation</li> </ul>"},{"location":"docker/essential_docker_commands/#port-mapping-options","title":"Port Mapping Options","text":"<pre><code># Map specific port\n-p 8080:80\n\n# Map to random host port\n-p 80\n\n# Map specific interface\n-p 127.0.0.1:8080:80\n\n# Map UDP port\n-p 8080:80/udp\n</code></pre>"},{"location":"docker/essential_docker_commands/#volume-mount-options","title":"Volume Mount Options","text":"<pre><code># Named volume\n-v volume_name:/path\n\n# Bind mount\n-v /host/path:/container/path\n\n# Read-only mount\n-v /host/path:/container/path:ro\n\n# Temporary filesystem\n--tmpfs /path\n</code></pre>"},{"location":"docker/essential_docker_commands/#practical-examples","title":"Practical Examples","text":""},{"location":"docker/essential_docker_commands/#example-1-web-application-with-database","title":"Example 1: Web Application with Database","text":"<pre><code># Create network\ndocker network create webapp-net\n\n# Run MySQL database\ndocker run -d \\\n  --name mysql-db \\\n  --network webapp-net \\\n  -e MYSQL_ROOT_PASSWORD=secret \\\n  -e MYSQL_DATABASE=myapp \\\n  -v mysql-data:/var/lib/mysql \\\n  mysql:8.0\n\n# Run web application\ndocker run -d \\\n  --name web-app \\\n  --network webapp-net \\\n  -p 8080:80 \\\n  -e DB_HOST=mysql-db \\\n  -e DB_NAME=myapp \\\n  myapp:latest\n</code></pre>"},{"location":"docker/essential_docker_commands/#example-2-development-environment","title":"Example 2: Development Environment","text":"<pre><code># Run container with code volume for development\ndocker run -it \\\n  --name dev-env \\\n  -v $(pwd):/workspace \\\n  -p 3000:3000 \\\n  -w /workspace \\\n  node:16 \\\n  bash\n</code></pre>"},{"location":"docker/essential_docker_commands/#example-3-temporary-testing-container","title":"Example 3: Temporary Testing Container","text":"<pre><code># Run temporary container that auto-removes\ndocker run --rm -it \\\n  -v $(pwd):/test \\\n  -w /test \\\n  python:3.9 \\\n  python script.py\n</code></pre>"},{"location":"docker/essential_docker_commands/#example-4-multi-container-application-logs","title":"Example 4: Multi-container Application Logs","text":"<pre><code># View logs from multiple containers\ndocker logs -f web-app &amp;\ndocker logs -f mysql-db &amp;\n\n# Or use docker-compose\ndocker-compose logs -f\n</code></pre>"},{"location":"docker/essential_docker_commands/#troubleshooting-commands","title":"Troubleshooting Commands","text":""},{"location":"docker/essential_docker_commands/#debugging-containers","title":"Debugging Containers","text":"<pre><code># Check container status\ndocker ps -a\n\n# Inspect container configuration\ndocker inspect container_name\n\n# Check container logs\ndocker logs --details container_name\n\n# Get shell access to debug\ndocker exec -it container_name /bin/sh\n\n# Check container processes\ndocker top container_name\n\n# Monitor resource usage\ndocker stats\n</code></pre>"},{"location":"docker/essential_docker_commands/#common-issues-solutions","title":"Common Issues Solutions","text":"<pre><code># Port already in use\ndocker ps | grep :8080\nsudo lsof -i :8080\n\n# Container won't start\ndocker logs container_name\ndocker inspect container_name\n\n# Out of disk space\ndocker system df\ndocker system prune -a\n\n# Permission issues\ndocker exec -it container_name ls -la /path\n</code></pre>"},{"location":"docker/essential_docker_commands/#quick-reference-cheat-sheet","title":"Quick Reference Cheat Sheet","text":"Command Description <code>docker run</code> Create and start container <code>docker ps</code> List running containers <code>docker stop</code> Stop container <code>docker rm</code> Remove container <code>docker images</code> List images <code>docker rmi</code> Remove image <code>docker pull</code> Download image <code>docker build</code> Build image <code>docker logs</code> View container logs <code>docker exec</code> Execute command in container <code>docker inspect</code> View detailed info <code>docker network</code> Manage networks <code>docker volume</code> Manage volumes <code>docker system prune</code> Clean up unused resources <p>Remember: Always refer to <code>docker --help</code> or <code>docker COMMAND --help</code> for the most up-to-date information and additional options!</p>"},{"location":"expo/expo_solutions_guide/","title":"Complete Expo React Native Solutions Guide","text":"<p>A comprehensive guide to developing, building, and deploying React Native applications using Expo, covering everything from local development to app store submission.</p>"},{"location":"expo/expo_solutions_guide/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Getting Started</li> <li>Local Development</li> <li>Project Health &amp; Diagnostics</li> <li>EAS CLI Setup</li> <li>Building for Preview</li> <li>Production Builds</li> <li>App Store Submission</li> <li>Updates &amp; Hot Fixes</li> <li>Advanced Commands</li> <li>Troubleshooting</li> </ol>"},{"location":"expo/expo_solutions_guide/#getting-started","title":"Getting Started","text":""},{"location":"expo/expo_solutions_guide/#prerequisites","title":"Prerequisites","text":"<pre><code># Install Node.js (LTS version recommended)\nnode --version\nnpm --version\n\n# Install Expo CLI globally\nnpm install -g @expo/cli\n\n# Verify installation\nexpo --version\n</code></pre>"},{"location":"expo/expo_solutions_guide/#project-initialization","title":"Project Initialization","text":"<pre><code># Create new Expo project\nnpx create-expo-app MyApp\ncd MyApp\n\n# Initialize existing React Native project with Expo\nnpx create-expo-app --template blank MyApp\nnpx create-expo-app --template typescript MyApp\n\n# Install dependencies\nnpm install\n</code></pre>"},{"location":"expo/expo_solutions_guide/#local-development","title":"Local Development","text":""},{"location":"expo/expo_solutions_guide/#running-your-app-locally","title":"Running Your App Locally","text":"<pre><code># Start development server\nnpm start\n# or\nnpx expo start\n\n# Start with specific options\nnpx expo start --clear        # Clear cache\nnpx expo start --offline      # Offline mode\nnpx expo start --localhost    # Force localhost\nnpx expo start --lan         # Use LAN instead of localhost\nnpx expo start --dev-client  # Use development client\n</code></pre>"},{"location":"expo/expo_solutions_guide/#network-troubleshooting","title":"Network Troubleshooting","text":"<pre><code># Use tunnel when local network doesn't work\nnpx expo start --tunnel\n\n# Force tunnel mode\nnpx expo start --tunnel --force\n\n# Start with specific host\nnpx expo start --host tunnel\nnpx expo start --host lan\nnpx expo start --host localhost\n</code></pre>"},{"location":"expo/expo_solutions_guide/#testing-on-devices","title":"Testing on Devices","text":"<p>Android: - Open Expo Go app - Scan QR code from terminal - Or manually enter the URL shown in terminal</p> <p>iOS: - Use iPhone camera to scan QR code - Tap notification to open in Expo Go - Or use Expo Go app's scanner</p>"},{"location":"expo/expo_solutions_guide/#project-health-diagnostics","title":"Project Health &amp; Diagnostics","text":""},{"location":"expo/expo_solutions_guide/#health-check-commands","title":"Health Check Commands","text":"<pre><code># Check project configuration and dependencies\nnpx expo-doctor\n\n# Install and run doctor\nnpx expo install --fix\n\n# Check for common issues\nnpx expo config\n\n# Validate app.json/app.config.js\nnpx expo config --type public\n\n# Check dependencies compatibility\nnpx expo install --check\n</code></pre>"},{"location":"expo/expo_solutions_guide/#dependency-management","title":"Dependency Management","text":"<pre><code># Install Expo-compatible versions\nnpx expo install package-name\n\n# Update dependencies to compatible versions\nnpx expo install --fix\n\n# Check outdated packages\nnpm outdated\n\n# Update specific package\nnpx expo install react-native@latest\n</code></pre>"},{"location":"expo/expo_solutions_guide/#eas-cli-setup","title":"EAS CLI Setup","text":""},{"location":"expo/expo_solutions_guide/#installation-and-authentication","title":"Installation and Authentication","text":"<pre><code># Install EAS CLI globally\nnpm install -g eas-cli\n\n# Verify installation\neas --version\n\n# Login to your Expo account\neas login\n\n# Check current user\neas whoami\n\n# Logout\neas logout\n</code></pre>"},{"location":"expo/expo_solutions_guide/#project-configuration","title":"Project Configuration","text":"<pre><code># Initialize EAS in your project\neas init\n\n# Configure build profiles\neas build:configure\n\n# View current configuration\neas config\n\n# Link project to Expo account\neas project:init\n</code></pre>"},{"location":"expo/expo_solutions_guide/#building-for-preview","title":"Building for Preview","text":""},{"location":"expo/expo_solutions_guide/#android-preview-builds","title":"Android Preview Builds","text":"<pre><code># Build Android preview (APK)\neas build --profile preview --platform android\n\n# Build with custom profile\neas build --profile development --platform android\n\n# Build and auto-submit to internal testing\neas build --profile preview --platform android --auto-submit\n</code></pre>"},{"location":"expo/expo_solutions_guide/#ios-preview-builds","title":"iOS Preview Builds","text":"<pre><code># Build iOS preview (IPA for simulator)\neas build --profile preview --platform ios\n\n# Build for device testing\neas build --profile preview-device --platform ios\n\n# Build iOS simulator build\neas build --profile preview --platform ios --simulator\n</code></pre>"},{"location":"expo/expo_solutions_guide/#installing-preview-builds","title":"Installing Preview Builds","text":"<p>iOS: 1. Download the <code>.tar.gz</code> file from EAS dashboard 2. Extract the folder 3. Drag the <code>.app</code> file to iOS Simulator 4. App will install and appear on home screen</p> <p>Android: 1. Copy the download link from EAS dashboard 2. Open link on Android device 3. Download and install the APK file 4. Enable \"Install from unknown sources\" if prompted</p>"},{"location":"expo/expo_solutions_guide/#production-builds","title":"Production Builds","text":""},{"location":"expo/expo_solutions_guide/#building-for-app-stores","title":"Building for App Stores","text":"<pre><code># Build for both platforms\neas build\n\n# Build for specific platform\neas build --platform android\neas build --platform ios\n\n# Build with specific profile\neas build --profile production\n\n# Build and auto-submit\neas build --platform android --auto-submit\n</code></pre>"},{"location":"expo/expo_solutions_guide/#build-profiles-configuration","title":"Build Profiles Configuration","text":"<pre><code># View build profiles\ncat eas.json\n\n# Build with custom message\neas build --message \"Release version 1.0.0\"\n\n# Build specific version\neas build --profile production --platform all\n</code></pre>"},{"location":"expo/expo_solutions_guide/#app-store-submission","title":"App Store Submission","text":""},{"location":"expo/expo_solutions_guide/#google-play-store-submission","title":"Google Play Store Submission","text":"<pre><code># Submit to Google Play Store\neas submit --platform android\n\n# Submit with specific build\neas submit --platform android --id [build-id]\n\n# Submit latest build\neas submit --platform android --latest\n\n# Submit with custom track\neas submit --platform android --track internal\n</code></pre>"},{"location":"expo/expo_solutions_guide/#apple-app-store-submission","title":"Apple App Store Submission","text":"<pre><code># Submit to App Store\neas submit --platform ios\n\n# Submit with specific build\neas submit --platform ios --id [build-id]\n\n# Submit latest build\neas submit --platform ios --latest\n\n# Submit to TestFlight only\neas submit --platform ios --apple-team-id [team-id]\n</code></pre>"},{"location":"expo/expo_solutions_guide/#updates-hot-fixes","title":"Updates &amp; Hot Fixes","text":""},{"location":"expo/expo_solutions_guide/#eas-update-commands","title":"EAS Update Commands","text":"<pre><code># Create and publish update\neas update\n\n# Update with message\neas update --message \"Fix critical login bug\"\n\n# Update specific branch/channel\neas update --branch production\neas update --channel production\n\n# Update with automatic message\neas update --auto\n\n# Republish latest update\neas update --republish\n</code></pre>"},{"location":"expo/expo_solutions_guide/#managing-updates","title":"Managing Updates","text":"<pre><code># View update history\neas update:list\n\n# View update details\neas update:view [update-id]\n\n# Delete update\neas update:delete [update-id]\n\n# Roll back to previous update\neas update:rollback\n</code></pre>"},{"location":"expo/expo_solutions_guide/#advanced-commands","title":"Advanced Commands","text":""},{"location":"expo/expo_solutions_guide/#development-and-debugging","title":"Development and Debugging","text":"<pre><code># Generate native code (for custom native code)\neas prebuild\n\n# Prebuild for specific platform\neas prebuild --platform android\neas prebuild --platform ios\n\n# Clean prebuild\neas prebuild --clean\n\n# Run with custom development client\nnpx expo run:android\nnpx expo run:ios\n</code></pre>"},{"location":"expo/expo_solutions_guide/#build-management","title":"Build Management","text":"<pre><code># List all builds\neas build:list\n\n# View build details\neas build:view [build-id]\n\n# Cancel running build\neas build:cancel [build-id]\n\n# Download build artifacts\neas build:download [build-id]\n</code></pre>"},{"location":"expo/expo_solutions_guide/#project-management","title":"Project Management","text":"<pre><code># View project information\neas project:info\n\n# Transfer project ownership\neas project:transfer\n\n# View build queue\neas build:queue\n\n# Check account usage\neas account:usage\n</code></pre>"},{"location":"expo/expo_solutions_guide/#troubleshooting","title":"Troubleshooting","text":""},{"location":"expo/expo_solutions_guide/#common-issues-and-solutions","title":"Common Issues and Solutions","text":""},{"location":"expo/expo_solutions_guide/#local-development-issues","title":"Local Development Issues","text":"<pre><code># Clear Expo cache\nnpx expo start --clear\n\n# Reset Metro cache\nnpx expo start --reset-cache\n\n# Fix port conflicts\nnpx expo start --port 8081\n\n# Debug network issues\nnpx expo start --tunnel --offline\n</code></pre>"},{"location":"expo/expo_solutions_guide/#build-issues","title":"Build Issues","text":"<pre><code># Check build logs\neas build:list\neas build:view [build-id]\n\n# Rebuild with clean state\neas build --clear-cache\n\n# Check credentials\neas credentials\n\n# Reset credentials\neas credentials --reset\n</code></pre>"},{"location":"expo/expo_solutions_guide/#update-issues","title":"Update Issues","text":"<pre><code># Check update status\neas channel:list\neas branch:list\n\n# Fix update not showing\neas update --force\n\n# Clear update cache on device\n# (Restart Expo Go or development client)\n</code></pre>"},{"location":"expo/expo_solutions_guide/#debugging-commands","title":"Debugging Commands","text":"<pre><code># Enable verbose logging\nDEBUG=* eas build\n\n# Check system info\nnpx expo diagnostics\n\n# Validate configuration\nnpx expo config --type public\n\n# Check environment\nnpx expo env:info\n</code></pre>"},{"location":"expo/expo_solutions_guide/#complete-development-workflow","title":"Complete Development Workflow","text":""},{"location":"expo/expo_solutions_guide/#daily-development","title":"Daily Development","text":"<pre><code># 1. Start development\nnpx expo start\n\n# 2. Install new packages\nnpx expo install package-name\n\n# 3. Check project health\nnpx expo-doctor\n\n# 4. Test on devices via QR code\n</code></pre>"},{"location":"expo/expo_solutions_guide/#pre-release-checklist","title":"Pre-Release Checklist","text":"<pre><code># 1. Health check\nnpx expo-doctor\n\n# 2. Update dependencies\nnpx expo install --fix\n\n# 3. Build preview\neas build --profile preview --platform all\n\n# 4. Test preview builds\n# 5. Create production build\neas build --profile production\n\n# 6. Submit to stores\neas submit --platform all\n</code></pre>"},{"location":"expo/expo_solutions_guide/#hot-fix-workflow","title":"Hot Fix Workflow","text":"<pre><code># 1. Fix the issue in code\n# 2. Test locally\nnpx expo start\n\n# 3. Publish update\neas update --message \"Fix critical issue\"\n\n# 4. Monitor deployment\neas update:list\n</code></pre>"},{"location":"expo/expo_solutions_guide/#configuration-files","title":"Configuration Files","text":""},{"location":"expo/expo_solutions_guide/#key-configuration-files","title":"Key Configuration Files","text":"<pre><code>\u251c\u2500\u2500 app.json              # Expo configuration\n\u251c\u2500\u2500 eas.json              # EAS Build configuration\n\u251c\u2500\u2500 package.json          # Dependencies and scripts\n\u251c\u2500\u2500 babel.config.js       # Babel configuration\n\u2514\u2500\u2500 .easignore           # Files to ignore during build\n</code></pre>"},{"location":"expo/expo_solutions_guide/#essential-scripts-packagejson","title":"Essential Scripts (package.json)","text":"<pre><code>{\n  \"scripts\": {\n    \"start\": \"expo start\",\n    \"android\": \"expo start --android\",\n    \"ios\": \"expo start --ios\",\n    \"web\": \"expo start --web\",\n    \"build\": \"eas build\",\n    \"build:preview\": \"eas build --profile preview\",\n    \"submit\": \"eas submit\",\n    \"update\": \"eas update\"\n  }\n}\n</code></pre>"},{"location":"expo/expo_solutions_guide/#quick-reference","title":"Quick Reference","text":""},{"location":"expo/expo_solutions_guide/#most-used-commands","title":"Most Used Commands","text":"Command Description <code>npx expo start</code> Start development server <code>npx expo start --tunnel</code> Start with tunnel (network issues) <code>npx expo-doctor</code> Check project health <code>eas login</code> Login to Expo account <code>eas build --profile preview</code> Build preview version <code>eas build</code> Build for production <code>eas submit</code> Submit to app stores <code>eas update</code> Deploy hot fix update"},{"location":"expo/expo_solutions_guide/#build-profiles","title":"Build Profiles","text":"<ul> <li>development: For development with debugging</li> <li>preview: For internal testing (APK/IPA)</li> <li>production: For app store submission</li> </ul>"},{"location":"expo/expo_solutions_guide/#platforms","title":"Platforms","text":"<ul> <li>android: Google Play Store</li> <li>ios: Apple App Store</li> <li>all: Both platforms</li> </ul> <p>Remember to always run <code>npx expo-doctor</code> before building to ensure your project is configured correctly!</p>"},{"location":"git/branching-merging/","title":"Branching &amp; Merging","text":"<p>Problem <code>error: Your local changes to the following files would be overwritten by merge</code></p> <p>Solution</p> <pre><code># Create a new branch\ngit branch {branchName}\n</code></pre> <pre><code># Switch to a branch\ngit checkout {branchName}\n</code></pre> <pre><code># Merge a remote branch into your current branch\ngit merge origin/{branchName}\n</code></pre>"},{"location":"git/industry_git_commands/","title":"Industry Git Commands for Project Management","text":"<p>A comprehensive guide to Git commands essential for professional software development and project management in enterprise environments.</p>"},{"location":"git/industry_git_commands/#table-of-contents","title":"Table of Contents","text":"<ol> <li>Repository Setup &amp; Initialization</li> <li>Branch Management Strategies</li> <li>Collaborative Development</li> <li>Code Review &amp; Pull Requests</li> <li>Release Management</li> <li>Hotfix &amp; Emergency Procedures</li> <li>Advanced Git Operations</li> <li>Git Flow Workflows</li> <li>Troubleshooting &amp; Recovery</li> <li>Enterprise Best Practices</li> </ol>"},{"location":"git/industry_git_commands/#repository-setup-initialization","title":"Repository Setup &amp; Initialization","text":""},{"location":"git/industry_git_commands/#initial-repository-setup","title":"Initial Repository Setup","text":"<pre><code># Initialize new repository\ngit init\n\n# Clone existing repository\ngit clone https://github.com/company/project.git\ngit clone git@github.com:company/project.git  # SSH\n\n# Clone specific branch\ngit clone -b develop https://github.com/company/project.git\n\n# Clone with custom directory name\ngit clone https://github.com/company/project.git my-project\n\n# Set up remote repositories\ngit remote add origin https://github.com/company/project.git\ngit remote add upstream https://github.com/original/project.git\n</code></pre>"},{"location":"git/industry_git_commands/#initial-configuration","title":"Initial Configuration","text":"<pre><code># Configure user information\ngit config --global user.name \"John Doe\"\ngit config --global user.email \"john.doe@company.com\"\n\n# Set default branch name\ngit config --global init.defaultBranch main\n\n# Set up SSH key (for secure access)\nssh-keygen -t ed25519 -C \"john.doe@company.com\"\nssh-add ~/.ssh/id_ed25519\n\n# Configure line endings (important for cross-platform teams)\ngit config --global core.autocrlf true  # Windows\ngit config --global core.autocrlf input # Mac/Linux\n\n# Set default editor\ngit config --global core.editor \"code --wait\"  # VS Code\n</code></pre>"},{"location":"git/industry_git_commands/#branch-management-strategies","title":"Branch Management Strategies","text":""},{"location":"git/industry_git_commands/#creating-and-managing-feature-branches","title":"Creating and Managing Feature Branches","text":"<pre><code># Create and switch to new feature branch\ngit checkout -b feature/user-authentication\ngit switch -c feature/user-authentication  # Modern syntax\n\n# Create branch from specific commit\ngit checkout -b hotfix/security-patch main\n\n# List all branches (local and remote)\ngit branch -a\ngit branch -r  # Remote only\n\n# Switch between branches\ngit checkout develop\ngit switch develop  # Modern syntax\n\n# Rename branch\ngit branch -m old-name new-name\ngit branch -m new-name  # Rename current branch\n\n# Delete branch (safe - prevents deletion if not merged)\ngit branch -d feature/completed-feature\n\n# Force delete branch\ngit branch -D feature/abandoned-feature\n\n# Delete remote branch\ngit push origin --delete feature/old-feature\n</code></pre>"},{"location":"git/industry_git_commands/#branch-tracking-and-updates","title":"Branch Tracking and Updates","text":"<pre><code># Set upstream branch for current branch\ngit push -u origin feature/new-feature\n\n# Track remote branch\ngit checkout --track origin/feature/existing-feature\n\n# Update local branch with remote changes\ngit pull origin develop\ngit pull --rebase origin develop  # Rebase instead of merge\n\n# Fetch all remote changes without merging\ngit fetch --all\n\n# Show branch relationships\ngit branch -vv\n</code></pre>"},{"location":"git/industry_git_commands/#collaborative-development","title":"Collaborative Development","text":""},{"location":"git/industry_git_commands/#daily-development-workflow","title":"Daily Development Workflow","text":"<pre><code># Start work day - update local repository\ngit fetch --all\ngit pull origin develop\n\n# Create feature branch for new work\ngit checkout -b feature/payment-integration\n\n# Stage and commit changes\ngit add .\ngit add -p  # Interactive staging (recommended)\ngit commit -m \"feat: implement stripe payment integration\"\n\n# Push feature branch to remote\ngit push -u origin feature/payment-integration\n\n# Regular commits during development\ngit add .\ngit commit -m \"feat: add payment validation logic\"\ngit push origin feature/payment-integration\n</code></pre>"},{"location":"git/industry_git_commands/#working-with-team-changes","title":"Working with Team Changes","text":"<pre><code># Update feature branch with latest develop\ngit checkout develop\ngit pull origin develop\ngit checkout feature/payment-integration\ngit merge develop\n\n# Alternative: Rebase feature branch\ngit checkout feature/payment-integration\ngit rebase develop\n\n# Interactive rebase for cleaning up commits\ngit rebase -i HEAD~3  # Last 3 commits\n\n# Resolve merge conflicts\ngit status\n# Edit conflicted files\ngit add resolved-file.js\ngit commit  # Complete merge\n</code></pre>"},{"location":"git/industry_git_commands/#stashing-work-in-progress","title":"Stashing Work in Progress","text":"<pre><code># Stash uncommitted changes\ngit stash\ngit stash save \"work in progress on login feature\"\n\n# List stashes\ngit stash list\n\n# Apply most recent stash\ngit stash pop\ngit stash apply  # Apply without removing from stash\n\n# Apply specific stash\ngit stash apply stash@{2}\n\n# Create branch from stash\ngit stash branch feature/from-stash\n</code></pre>"},{"location":"git/industry_git_commands/#code-review-pull-requests","title":"Code Review &amp; Pull Requests","text":""},{"location":"git/industry_git_commands/#preparing-code-for-review","title":"Preparing Code for Review","text":"<pre><code># Ensure branch is up to date\ngit checkout develop\ngit pull origin develop\ngit checkout feature/payment-integration\ngit rebase develop\n\n# Clean up commit history before PR\ngit rebase -i HEAD~5  # Interactive rebase last 5 commits\n\n# Push cleaned branch\ngit push --force-with-lease origin feature/payment-integration\n\n# Create tag for release candidate\ngit tag -a v1.2.0-rc1 -m \"Release candidate 1.2.0\"\ngit push origin v1.2.0-rc1\n</code></pre>"},{"location":"git/industry_git_commands/#code-review-commands","title":"Code Review Commands","text":"<pre><code># Checkout PR for local testing\ngit fetch origin pull/123/head:pr-123\ngit checkout pr-123\n\n# Compare branches\ngit diff develop..feature/payment-integration\ngit diff --name-only develop..feature/payment-integration\n\n# Show commits in feature branch not in develop\ngit log develop..feature/payment-integration --oneline\n\n# Check which branches contain specific commit\ngit branch --contains commit-hash\n</code></pre>"},{"location":"git/industry_git_commands/#release-management","title":"Release Management","text":""},{"location":"git/industry_git_commands/#creating-releases","title":"Creating Releases","text":"<pre><code># Create release branch\ngit checkout -b release/v1.2.0 develop\n\n# Bump version files, update changelog\ngit add .\ngit commit -m \"chore: bump version to 1.2.0\"\n\n# Merge release to main\ngit checkout main\ngit merge --no-ff release/v1.2.0\n\n# Tag the release\ngit tag -a v1.2.0 -m \"Release version 1.2.0\"\n\n# Merge back to develop\ngit checkout develop\ngit merge --no-ff release/v1.2.0\n\n# Push everything\ngit push origin main develop v1.2.0\n\n# Delete release branch\ngit branch -d release/v1.2.0\ngit push origin --delete release/v1.2.0\n</code></pre>"},{"location":"git/industry_git_commands/#managing-tags-and-versions","title":"Managing Tags and Versions","text":"<pre><code># List all tags\ngit tag\ngit tag -l \"v1.*\"  # Filter tags\n\n# Show tag information\ngit show v1.2.0\n\n# Create signed tag\ngit tag -s v1.2.0 -m \"Signed release 1.2.0\"\n\n# Push specific tag\ngit push origin v1.2.0\n\n# Push all tags\ngit push origin --tags\n\n# Delete tag locally and remotely\ngit tag -d v1.2.0\ngit push origin --delete v1.2.0\n\n# Checkout specific version\ngit checkout v1.2.0\n</code></pre>"},{"location":"git/industry_git_commands/#hotfix-emergency-procedures","title":"Hotfix &amp; Emergency Procedures","text":""},{"location":"git/industry_git_commands/#emergency-hotfix-process","title":"Emergency Hotfix Process","text":"<pre><code># Create hotfix branch from main\ngit checkout main\ngit pull origin main\ngit checkout -b hotfix/security-vulnerability\n\n# Make critical fix\ngit add fixed-file.js\ngit commit -m \"fix: resolve critical security vulnerability\"\n\n# Test the fix\n# Run automated tests, security scans\n\n# Merge hotfix to main\ngit checkout main\ngit merge --no-ff hotfix/security-vulnerability\n\n# Tag hotfix release\ngit tag -a v1.2.1 -m \"Hotfix release 1.2.1\"\n\n# Merge hotfix to develop\ngit checkout develop\ngit merge --no-ff hotfix/security-vulnerability\n\n# Push everything\ngit push origin main develop v1.2.1\n\n# Clean up\ngit branch -d hotfix/security-vulnerability\ngit push origin --delete hotfix/security-vulnerability\n</code></pre>"},{"location":"git/industry_git_commands/#reverting-changes-in-production","title":"Reverting Changes in Production","text":"<pre><code># Revert specific commit\ngit revert commit-hash\ngit revert HEAD  # Revert last commit\n\n# Revert merge commit\ngit revert -m 1 merge-commit-hash\n\n# Revert multiple commits\ngit revert HEAD~3..HEAD\n\n# Create revert PR instead of direct revert\ngit revert --no-commit HEAD~3..HEAD\ngit commit -m \"Revert problematic changes from release 1.2.0\"\n</code></pre>"},{"location":"git/industry_git_commands/#advanced-git-operations","title":"Advanced Git Operations","text":""},{"location":"git/industry_git_commands/#rebasing-and-history-management","title":"Rebasing and History Management","text":"<pre><code># Interactive rebase to clean up history\ngit rebase -i HEAD~5\n\n# Rebase feature branch onto develop\ngit rebase develop feature/payment-integration\n\n# Continue rebase after resolving conflicts\ngit rebase --continue\n\n# Abort rebase\ngit rebase --abort\n\n# Squash commits\ngit rebase -i HEAD~3\n# Change 'pick' to 'squash' for commits to combine\n\n# Split a commit\ngit rebase -i HEAD~2\n# Change 'pick' to 'edit' for commit to split\ngit reset HEAD~\n# Stage and commit files separately\ngit add file1.js\ngit commit -m \"first part of original commit\"\ngit add file2.js\ngit commit -m \"second part of original commit\"\ngit rebase --continue\n</code></pre>"},{"location":"git/industry_git_commands/#cherry-picking-and-selective-merging","title":"Cherry-picking and Selective Merging","text":"<pre><code># Cherry-pick specific commit\ngit cherry-pick commit-hash\n\n# Cherry-pick without committing\ngit cherry-pick --no-commit commit-hash\n\n# Cherry-pick range of commits\ngit cherry-pick commit1..commit2\n\n# Cherry-pick from another branch\ngit cherry-pick feature/other-branch~3\n</code></pre>"},{"location":"git/industry_git_commands/#advanced-merging-strategies","title":"Advanced Merging Strategies","text":"<pre><code># Merge with no fast-forward (creates merge commit)\ngit merge --no-ff feature/payment-integration\n\n# Merge and squash all commits\ngit merge --squash feature/payment-integration\n\n# Merge with specific strategy\ngit merge -X ours feature/conflicting-branch  # Prefer our changes\ngit merge -X theirs feature/conflicting-branch  # Prefer their changes\n\n# Abort merge\ngit merge --abort\n\n# Continue merge after resolving conflicts\ngit commit  # Complete the merge\n</code></pre>"},{"location":"git/industry_git_commands/#git-flow-workflows","title":"Git Flow Workflows","text":""},{"location":"git/industry_git_commands/#git-flow-commands-using-git-flow-extension","title":"Git Flow Commands (using git-flow extension)","text":"<pre><code># Initialize git flow\ngit flow init\n\n# Start new feature\ngit flow feature start payment-integration\n\n# Finish feature (merges to develop)\ngit flow feature finish payment-integration\n\n# Start release\ngit flow release start 1.2.0\n\n# Finish release (merges to main and develop, creates tag)\ngit flow release finish 1.2.0\n\n# Start hotfix\ngit flow hotfix start security-patch\n\n# Finish hotfix\ngit flow hotfix finish security-patch\n</code></pre>"},{"location":"git/industry_git_commands/#github-flow-simplified","title":"GitHub Flow (Simplified)","text":"<pre><code># Create feature branch\ngit checkout -b feature/new-feature\n\n# Work and commit\ngit add .\ngit commit -m \"implement new feature\"\ngit push origin feature/new-feature\n\n# Create pull request (via GitHub UI)\n# After review and approval, merge via GitHub\n\n# Clean up local branch\ngit checkout main\ngit pull origin main\ngit branch -d feature/new-feature\n</code></pre>"},{"location":"git/industry_git_commands/#troubleshooting-recovery","title":"Troubleshooting &amp; Recovery","text":""},{"location":"git/industry_git_commands/#undoing-changes","title":"Undoing Changes","text":"<pre><code># Undo last commit (keep changes staged)\ngit reset --soft HEAD~1\n\n# Undo last commit (unstage changes)\ngit reset HEAD~1\ngit reset --mixed HEAD~1  # Same as above\n\n# Undo last commit (lose changes)\ngit reset --hard HEAD~1\n\n# Undo changes to specific file\ngit checkout HEAD -- file.js\ngit restore file.js  # Modern syntax\n\n# Unstage file\ngit reset HEAD file.js\ngit restore --staged file.js  # Modern syntax\n</code></pre>"},{"location":"git/industry_git_commands/#recovery-operations","title":"Recovery Operations","text":"<pre><code># Find lost commits\ngit reflog\ngit log --oneline --all\n\n# Recover deleted branch\ngit checkout -b recovered-branch commit-hash\n\n# Find commit that introduced bug\ngit bisect start\ngit bisect bad HEAD\ngit bisect good v1.1.0\n# Git will checkout commits to test\ngit bisect good/bad  # Mark each commit\ngit bisect reset  # End bisect session\n\n# Recover file from specific commit\ngit show commit-hash:path/to/file.js &gt; recovered-file.js\n\n# Find commits that changed specific file\ngit log --follow -- file.js\n</code></pre>"},{"location":"git/industry_git_commands/#cleaning-repository","title":"Cleaning Repository","text":"<pre><code># Remove untracked files\ngit clean -n  # Dry run\ngit clean -f  # Remove files\ngit clean -fd  # Remove files and directories\n\n# Remove ignored files\ngit clean -fX\n\n# Garbage collect\ngit gc --aggressive --prune=now\n\n# Verify repository integrity\ngit fsck\n</code></pre>"},{"location":"git/industry_git_commands/#enterprise-best-practices","title":"Enterprise Best Practices","text":""},{"location":"git/industry_git_commands/#commit-message-standards","title":"Commit Message Standards","text":"<pre><code># Conventional Commits format\ngit commit -m \"feat: add user authentication system\"\ngit commit -m \"fix: resolve login validation bug\"\ngit commit -m \"docs: update API documentation\"\ngit commit -m \"chore: update dependencies\"\ngit commit -m \"test: add unit tests for payment service\"\n\n# Multi-line commit messages\ngit commit -m \"feat: implement payment processing\n\n- Add Stripe integration\n- Handle payment validation\n- Add error handling for failed payments\n- Update user interface for payment flow\"\n</code></pre>"},{"location":"git/industry_git_commands/#branch-protection-and-policies","title":"Branch Protection and Policies","text":"<pre><code># Check if branch is protected (GitHub CLI)\ngh api repos/:owner/:repo/branches/main\n\n# Enforce signed commits\ngit config --global commit.gpgsign true\n\n# Set up commit template\ngit config --global commit.template ~/.gitmessage\n</code></pre>"},{"location":"git/industry_git_commands/#repository-maintenance","title":"Repository Maintenance","text":"<pre><code># Update all remote references\ngit remote update --prune\n\n# Show repository statistics\ngit count-objects -v\n\n# Find large files in repository\ngit rev-list --objects --all | git cat-file --batch-check='%(objecttype) %(objectname) %(objectsize) %(rest)' | awk '/^blob/ {print substr($0,6)}' | sort --numeric-sort --key=2\n\n# Remove file from entire history (use carefully!)\ngit filter-branch --force --index-filter 'git rm --cached --ignore-unmatch large-file.zip' --prune-empty --tag-name-filter cat -- --all\n</code></pre>"},{"location":"git/industry_git_commands/#security-and-access-management","title":"Security and Access Management","text":"<pre><code># Sign commits with GPG\ngit commit -S -m \"signed commit message\"\n\n# Verify signatures\ngit log --show-signature\n\n# Configure GPG key\ngit config --global user.signingkey GPG-KEY-ID\n\n# Use SSH for authentication\ngit config --global url.\"git@github.com:\".insteadOf \"https://github.com/\"\n</code></pre>"},{"location":"git/industry_git_commands/#daily-workflow-checklist","title":"Daily Workflow Checklist","text":""},{"location":"git/industry_git_commands/#morning-routine","title":"Morning Routine","text":"<pre><code># 1. Update local repository\ngit fetch --all\ngit checkout develop\ngit pull origin develop\n\n# 2. Check status of current work\ngit status\ngit stash list\n\n# 3. Review what happened overnight\ngit log --oneline --since=\"1 day ago\"\n</code></pre>"},{"location":"git/industry_git_commands/#before-leaving-work","title":"Before Leaving Work","text":"<pre><code># 1. Commit or stash work in progress\ngit add .\ngit commit -m \"wip: progress on feature X\" || git stash\n\n# 2. Push current branch\ngit push origin current-branch-name\n\n# 3. Clean up workspace\ngit status  # Ensure clean working directory\n</code></pre>"},{"location":"git/industry_git_commands/#weekly-maintenance","title":"Weekly Maintenance","text":"<pre><code># 1. Update all branches\ngit fetch --all --prune\n\n# 2. Clean up merged branches\ngit branch --merged | grep -v \"\\*\\|main\\|develop\" | xargs -n 1 git branch -d\n\n# 3. Update main and develop\ngit checkout main &amp;&amp; git pull origin main\ngit checkout develop &amp;&amp; git pull origin develop\n</code></pre>"},{"location":"git/industry_git_commands/#emergency-commands-reference","title":"Emergency Commands Reference","text":"Situation Command Need to switch branches quickly <code>git stash &amp;&amp; git checkout branch-name</code> Accidentally committed to wrong branch <code>git reset --soft HEAD~1</code> Need to undo last commit but keep changes <code>git reset --soft HEAD~1</code> Made mistake in commit message <code>git commit --amend -m \"corrected message\"</code> Need to find when bug was introduced <code>git bisect start &amp;&amp; git bisect bad HEAD &amp;&amp; git bisect good v1.0.0</code> Accidentally deleted branch <code>git reflog</code> then <code>git checkout -b branch-name commit-hash</code> Production is broken, need quick revert <code>git revert commit-hash &amp;&amp; git push origin main</code> Merge conflict during important release <code>git merge --abort</code> then resolve properly <p>Remember: Always backup important work, communicate with your team before force-pushing, and follow your company's specific Git workflows and policies!</p>"},{"location":"git/merge-conflict/","title":"Fixing Merge Conflict in Git","text":"<p>Problem <code>error: Your local changes to the following files would be overwritten by merge</code></p> <p>Solution</p> <pre><code>git stash\ngit pull origin main\ngit stash pop\n# Resolve any merge conflicts if they arise\n</code></pre>"}]}