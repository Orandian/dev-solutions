{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"caddy/ssl-renewal/","title":"Troubleshooting Caddy: A Guide to Running and Renewing SSL","text":"<p>This guide outlines a methodical approach to diagnosing and resolving common issues with Caddy, including startup failures and problems with SSL certificate renewal. The process involves systematically checking Caddy's status, configuration, and permissions.</p>"},{"location":"caddy/ssl-renewal/#1-initial-caddy-status-check","title":"1. Initial Caddy Status Check","text":"<p>Start by verifying Caddy's operational status and location.</p> <ul> <li>Check the Caddy process: <code>bash     which caddy</code>     This command shows the path to the Caddy executable.</li> <li>Get Caddy's version: <code>bash     caddy version</code>     This helps in identifying potential version-specific issues.</li> <li>Find Caddy-related files: <code>bash     sudo find /etc -name \u201c*caddy*\u201d -o -name \u201cCaddyfile\u201d 2&gt;/dev/null</code>     This command helps locate Caddy's configuration and related files.</li> <li>View the Caddyfile: <code>bash     sudo cat /etc/caddy/Caddyfile</code>     Review the Caddyfile for any syntax errors or misconfigurations.</li> </ul>"},{"location":"caddy/ssl-renewal/#2-diagnosing-ssl-and-directory-issues","title":"2. Diagnosing SSL and Directory Issues","text":"<p>SSL certificate renewal and Caddy's ability to write to its data directory are frequent points of failure.</p> <ul> <li>List certificate files: <code>bash     sudo ls -la /var/lib/caddy/.local/share/caddy/certificates/</code>     Check if certificates exist and if their permissions are correct.</li> <li>Find certificate and ACME files: <code>bash     sudo find /var/lib/caddy -name \u201c*certificate*\u201d -o -name \u201c*acme*\u201d 2&gt;/dev/null</code>     This helps locate all related SSL and ACME challenge files.</li> <li>List Caddy's data directory contents: <code>bash     sudo ls -la /var/lib/caddy</code>     Verify the permissions and ownership of the Caddy data directory.</li> </ul>"},{"location":"caddy/ssl-renewal/#3-reviewing-logs-and-validation","title":"3. Reviewing Logs and Validation","text":"<p>Logs are crucial for understanding why Caddy might be failing.</p> <ul> <li>Check Caddy service logs: <code>bash     sudo journalctl -u caddy -no-page -n 50</code>     Examine the last 50 lines of the Caddy service journal for error messages.</li> <li>Validate the Caddyfile: <code>bash     sudo caddy validate --config /etc/caddy/Caddyfile</code>     A successful validation confirms that the Caddyfile syntax is correct.</li> </ul>"},{"location":"caddy/ssl-renewal/#4-remediation-steps","title":"4. Remediation Steps","text":"<p>If errors were found, follow these steps to fix common issues.</p> <ul> <li>Restart the Caddy service: <code>bash     sudo systemctl restart caddy</code>     A simple restart can resolve temporary glitches.</li> <li>View the Caddy service unit file: <code>bash     sudo cat /etc/systemd/system/caddy.service</code>     This file defines how Caddy runs and under which user.</li> <li>Test Caddy with its configuration: <code>bash     sudo /usr/local/bin/caddy run --environ --config /etc/caddy/Caddyfile</code>     This command runs Caddy in the foreground, providing real-time output that can reveal subtle errors.</li> <li>Clear old certificate data: <code>bash     sudo rm -rf /root/.local/share/caddy/certificates/     sudo rm -rf /root/.local/share/caddy/locks/</code>     Sometimes, corrupted or outdated certificates can prevent renewal. Deleting them forces Caddy to request new ones.</li> <li>Format the Caddyfile: <code>bash     sudo caddy fmt --overwrite /etc/caddy/Caddyfile</code>     This command standardizes the formatting of the Caddyfile, which can help in spotting syntax issues.</li> </ul>"},{"location":"caddy/ssl-renewal/#5-ensuring-proper-user-and-permissions","title":"5. Ensuring Proper User and Permissions","text":"<p>Incorrect user permissions are a very common cause of Caddy failures. The best practice is to run Caddy as a dedicated, unprivileged system user.</p> <ul> <li>Add a dedicated system user for Caddy: <code>bash     sudo user add --system --home /var/lib/caddy --create-home --shell /usr/sbin/nologin caddy</code></li> <li>Set proper ownership: <code>bash     sudo chown -R caddy:caddy /var/lib/caddy</code>     This ensures Caddy can read and write to its data directory.</li> </ul>"},{"location":"caddy/ssl-renewal/#6-fixing-the-systemd-service-file","title":"6. Fixing the Systemd Service File","text":"<p>The systemd service file dictates Caddy's behavior. An incorrect configuration can cause it to fail silently.</p> <ul> <li> <p>Create or correct the systemd service file:     ```bash     sudo tee /etc/systemd/system/caddy.service &gt; /dev/null &lt;&lt; 'EOF'     [Unit]     Description=Caddy Web Server     Documentation=https://caddyserver.com/docs/     After=network.target network-online.target     Requires=network-online.target</p> <p>[Service] Type=notify User=caddy Group=caddy ExecStart=/usr/local/bin/caddy run --environ --config /etc/caddy/Caddyfile ExecReload=/usr/local/bin/caddy reload --config /etc/caddy/Caddyfile --force TimeoutStopSec=5s LimitNOFILE=1048576 LimitNPROC=1048576 PrivateTmp=true ProtectSystem=full AmbientCapabilities=CAP_NET_BIND_SERVICE NoNewPrivileges=true</p> <p>[Install] WantedBy=multi-user.target EOF <code>* **Reload systemd:**</code>bash sudo systemctl daemon-reload ``` This command makes systemd aware of the new or changed service file.</p> </li> </ul>"},{"location":"caddy/ssl-renewal/#7-final-verification-and-cleanup","title":"7. Final Verification and Cleanup","text":"<ul> <li>Check logs for final errors: <code>bash     sudo journalctl -xeu caddy.service --no-pager -n 20</code>     Review the most recent logs to confirm the service is starting without issues.</li> <li>Check listening ports: <code>bash     sudo lsof -i :2019</code>     This command verifies that Caddy is listening on its default management port.</li> <li>Kill any old Caddy processes: <code>bash     sudo pkill -f caddy</code>     This ensures that no conflicting processes are running.</li> <li>Start the Caddy service: <code>bash     sudo systemctl start caddy</code></li> <li>Test connectivity and SSL: <code>bash     sleep 5 &amp;&amp; curl -I [https://api.nexplace.jp](https://api.nexplace.jp)     echo | openssl s_client -servername api.nexplace.jp -connect api.nexplace.jp:443 2&gt;/dev/null | openssl x509 -noout -dates</code>     These commands confirm that the site is accessible and that the SSL certificate is valid and has been renewed.</li> <li>Enable Caddy to start on boot: <code>bash     sudo systemctl enable caddy</code>     This final step ensures that Caddy will automatically start whenever the system reboots.</li> </ul>"},{"location":"git/branching-merging/","title":"Branching &amp; Merging","text":"<p>Problem <code>error: Your local changes to the following files would be overwritten by merge</code></p> <p>Solution</p> <pre><code># Create a new branch\ngit branch {branchName}\n</code></pre> <pre><code># Switch to a branch\ngit checkout {branchName}\n</code></pre> <pre><code># Merge a remote branch into your current branch\ngit merge origin/{branchName}\n</code></pre>"},{"location":"git/merge-conflict/","title":"Fixing Merge Conflict in Git","text":"<p>Problem <code>error: Your local changes to the following files would be overwritten by merge</code></p> <p>Solution</p> <pre><code>git stash\ngit pull origin main\ngit stash pop\n# Resolve any merge conflicts if they arise\n</code></pre>"}]}